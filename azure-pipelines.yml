trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
  - stage: Build
    displayName: "Continuious Integration"
    jobs:
      - job: job01
        displayName: "My CI"
        steps:
          - task: MavenAuthenticate@0
            inputs:
              artifactsFeeds: 'oscarllamas6'
            displayName: "Artifacts Auth"
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              jdkVersionOption: '1.17'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
            displayName: "Compile"

          - task: SnykSecurityScan@1
            inputs:
              serviceConnectionEndpoint: 'snyk_galaxy'
              testType: 'code'
              codeSeverityThreshold: 'medium'
              failOnIssues: false
              projectName: '$(Build.Repository.Name)'
              organization: 'oscarllamasusac'
            displayName: "Snyk Scan"

          - task: SnykSecurityScan@1
            inputs:
              serviceConnectionEndpoint: 'snyk_galaxy'
              testType: 'app'
              monitorWhen: always
              codeSeverityThreshold: 'medium'
              failOnIssues: false
              projectName: '$(Build.Repository.Name)'
              organization: 'oscarllamasusac'
            displayName: "SCA Snyk Scan"

          - task: SonarQubePrepare@6
            inputs:
              SonarQube: 'sc_sonarqube_galaxy'
              scannerMode: 'CLI'
              configMode: 'manual'
              cliProjectKey: 'devsecops-galaxy-lab2'
              cliProjectName: 'devsecops-galaxy-lab2'
              extraProperties: |
                sonar.exclusions=**/*.bin
                sonar.projectKey=devsecops-galaxy-lab2
                sonar.projectName=devsecops-galaxy-lab2
                sonar.sources=src/main
                sonar.sourceEncoding=UTF-8
                sonar.language=java
                sonar.tests=src/test
                sonar.junit.reportsPath=target/surefire-reports
                sonar.surefire.reportsPath=target/surefire-reports
                sonar.jacoco.reportPath=target/jacoco.exec
                sonar.java.binaries=target/classes
                sonar.java.coveragePlugin=jacoco
                sonar.coverage.jacoco.xmlReportPaths=target/jacoco.xml
                sonar.exclusions=**/*IT.java,**/*TEST.java,**/*Test.java,**/src/it**,**/src/test**,**/gradle/wrapper**
                sonar.java.libraries=target/*.jar
          - powershell: |
              $params = "$env:SONARQUBE_SCANNER_PARAMS" -replace '"sonar.branch.name":"[\w,/,-]*"\,?'
              Write-Host "##vso[task.setvariable variable=SONARQUBE_SCANNER_PARAMS]$params"
            displayName: "Prepare SonarQube Config"
            
          - task: SonarQubeAnalyze@6
            inputs:
              jdkversion: 'JAVA_HOME_17_X64'
            displayName: "Analizing with SonarQube"

          - task: SonarQubePublish@6
            inputs:
              pollingTimeoutSec: '300'
            displayName: "Display SonarQube Results"


          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'deploy'
              publishJUnitResults: true
              testResultsFiles: '**/surefire-reports/TEST-*.xml'
              javaHomeOption: 'JDKVersion'
              mavenVersionOption: 'Default'
              mavenAuthenticateFeed: false
              effectivePomSkip: false
              sonarQubeRunAnalysis: false
            displayName: "Publish to Azure DevOps Artifacts"
            

          - task: CopyFiles@2
            inputs:
              Contents: 'target/*.jar'
              TargetFolder: '$(Build.ArtifactStagingDirectory)'
            displayName: "Copy artifacts"
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'artifact'
              publishLocation: 'Container'
            displayName: "Publish artifacts"